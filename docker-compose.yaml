version: "3.8"
name: ${PROJECT_FOLDER_NAME:-apiato}
services:
  server:
    build:
      context: .
      dockerfile: dockerfiles/nginx.dockerfile
    container_name: ${PROJECT_FOLDER_NAME}_nginx
    ports:
      - '80:80'
    volumes:
      - ${PROJECT_VOLUME:?err}
      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php
      - postgres
  php:
    image: masmikh/php_base:latest
    container_name: ${PROJECT_FOLDER_NAME}_php
    user: '${UID}:${UID}'
    working_dir: ${WORKING_DIR:?err}
    volumes:
      - ${PROJECT_VOLUME:?err}
      - ./.composer:/.composer
      - ./config/php.ini:/usr/local/etc/php/conf.d/custom.ini
  php_debug:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
      target: php_debug
    image: masmikh/php_debug:latest
    container_name: ${PROJECT_FOLDER_NAME}_php_debug
    user: '${UID}:${UID}'
    working_dir: ${WORKING_DIR:?err}
    volumes:
      - ${PROJECT_VOLUME:?err}
      - ./.composer:/.composer
      - ./config/php.ini:/usr/local/etc/php/conf.d/custom.ini
  mysql:
    image: mysql:5.7
    container_name: ${PROJECT_FOLDER_NAME}_mysql
    ports:
      - "3306:3306"
    env_file:
      - ./mysql/mysql.env
  postgres:
    image: ghcr.io/baosystems/postgis:14-3.3
    container_name: ${PROJECT_FOLDER_NAME}_postgres
    restart: always
    user: '${UID}:${UID}'
    env_file:
      - postgres/postgres.env
    volumes:
      - /etc/passwd:/etc/passwd:ro
      - ./postgres/data:/var/lib/postgresql/data
      - ./postgres/conf:/etc/postgresql
      - ./postgres/log:/var/log/postgresql
      - ./postgres/install-citext.sql:/docker-entrypoint-initdb.d/install-citext.sql
    ports:
      - "5432:5432"
    command:
      - "postgres"
      - "-c"
      - "max_locks_per_transaction=1024"
  adminer:
    image: adminer
    container_name: ${PROJECT_FOLDER_NAME}_adminer
    restart: always
    ports:
      - "8090:8080"
  npm:
    build:
      context: .
      dockerfile: dockerfiles/node.dockerfile
    container_name: ${PROJECT_FOLDER_NAME}_npm
    entrypoint: [ "npm" ]
    volumes:
      - ${PROJECT_VOLUME:?err}
  node:
    build:
      context: .
      dockerfile: dockerfiles/node.dockerfile
    container_name: ${PROJECT_FOLDER_NAME}_node
    volumes:
      - ${PROJECT_VOLUME:?err}
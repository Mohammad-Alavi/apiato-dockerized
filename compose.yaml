name: '${PROJECT_FOLDER_NAME:?err}'

x-php: &php
  user: '${UID}:${UID}'
  working_dir: ${WORKING_DIR:?err}
  volumes:
    - ${PROJECT_VOLUME:?err}
    - ./.composer:/.composer
    - ./config/php.ini:/usr/local/etc/php/conf.d/custom.ini

services:
  server:
    build:
      context: .
      dockerfile: dockerfiles/nginx.dockerfile
    container_name: ${PROJECT_FOLDER_NAME:?err}_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ${PROJECT_VOLUME:?err}
#      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./config/nginx.conf:/etc/nginx/templates/nginx.conf.template
    environment:
      NGINX_ENVSUBST_OUTPUT_DIR: /etc/nginx
      PHP_HOST: ${PHP_VER:?err}
    env_file:
      - .env
      - "${PROJECT_FOLDER_NAME:?err}/.env.docker"
    depends_on:
      - ${PHP_VER:?err}
      - postgres
  php81:
    image: masmikh/php81:latest
    container_name: ${PROJECT_FOLDER_NAME:?err}_php81
    <<: *php
  php82:
    image: masmikh/php82:latest
    container_name: ${PROJECT_FOLDER_NAME:?err}_php82
    <<: *php
  php81_debug:
    build:
      context: dockerfiles
      dockerfile: php.dockerfile
      target: php81_debug
    image: masmikh/php81_debug:latest
    container_name: ${PROJECT_FOLDER_NAME:?err}_php81_debug
    <<: *php
  mysql:
    image: mysql:5.7
    container_name: ${PROJECT_FOLDER_NAME:?err}_mysql
    ports:
      - "3306:3306"
    env_file:
      - mysql/mysql.env
  postgres:
    image: postgres:latest
    container_name: ${PROJECT_FOLDER_NAME:?err}_postgres
    restart: always
    user: '${UID}:${UID}'
    env_file:
      - postgres/postgres.env
    volumes:
      - /etc/passwd:/etc/passwd:ro
      - ./postgres/data:/var/lib/postgresql/data
      - ./postgres/conf:/etc/postgresql
      - ./postgres/log:/var/log/postgresql
    ports:
      - "5432:5432"
  adminer:
    image: adminer
    container_name: ${PROJECT_FOLDER_NAME:?err}_adminer
    restart: always
    ports:
      - "8090:8080"
  node: &node
    build:
      context: .
      dockerfile: dockerfiles/node.dockerfile
    container_name: ${PROJECT_FOLDER_NAME:?err}_node
    working_dir: ${WORKING_DIR:?err}
    volumes:
      - ${PROJECT_VOLUME:?err}
  npm:
    <<: *node
    container_name: ${PROJECT_FOLDER_NAME:?err}_npm
    entrypoint: [ "npm" ]
  pnpm:
    <<: *node
    container_name: ${PROJECT_FOLDER_NAME:?err}_pnpm
    entrypoint: [ "pnpm" ]
